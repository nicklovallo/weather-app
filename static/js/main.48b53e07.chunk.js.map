{"version":3,"sources":["components/Search.js","components/Weather.js","components/MapContainer.js","App.js","serviceWorker.js","index.js"],"names":["Search","search","setSearch","getWeather","onSubmit","e","preventDefault","target","firstElementChild","value","alert","className","type","id","placeholder","Weather","countryCode","weather","isoCountries","convertToF","k","toFixed","convertToC","name","sys","country","hasOwnProperty","main","temp","feels_like","description","MapContainer","center","lat","coord","lng","lon","googleMapsApiKey","process","mapContainerStyle","height","width","zoom","App","useState","setWeather","city","fetch","then","res","json","result","catch","err","window","location","reload","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"yQA0CeA,MAxCf,YAAmD,EAAjCC,OAAkC,IAA1BC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,WAcnC,OACE,6BAEE,0BAAMC,SAfY,SAACC,GACrBA,EAAEC,iBAEuC,KAArCD,EAAEE,OAAOC,kBAAkBC,MAC7BC,MAAM,yBAENR,EAAUG,EAAEE,OAAOC,kBAAkBC,OACrCN,EAAWE,EAAEE,OAAOC,kBAAkBC,OACtCJ,EAAEE,OAAOC,kBAAkBC,MAAQ,KAOJE,UAAU,QAEvC,2BACEA,UAAU,SACVC,KAAK,OACLC,GAAG,SACHC,YAAY,eAGd,2BACEH,UAAU,SACVC,KAAK,SACLH,MAAM,SACNI,GAAG,cCyPEE,MAvRf,YAA+B,IA0PLC,EA1PPC,EAAW,EAAXA,QAEXC,EAAe,CACnB,GAAO,cACP,GAAO,gBACP,GAAO,UACP,GAAO,UACP,GAAO,iBACP,GAAO,UACP,GAAO,SACP,GAAO,WACP,GAAO,aACP,GAAO,sBACP,GAAO,YACP,GAAO,UACP,GAAO,QACP,GAAO,YACP,GAAO,UACP,GAAO,aACP,GAAO,UACP,GAAO,UACP,GAAO,aACP,GAAO,WACP,GAAO,UACP,GAAO,UACP,GAAO,SACP,GAAO,QACP,GAAO,UACP,GAAO,SACP,GAAO,UACP,GAAO,yBACP,GAAO,WACP,GAAO,gBACP,GAAO,SACP,GAAO,iCACP,GAAO,oBACP,GAAO,WACP,GAAO,eACP,GAAO,UACP,GAAO,WACP,GAAO,WACP,GAAO,SACP,GAAO,aACP,GAAO,iBACP,GAAO,2BACP,GAAO,OACP,GAAO,QACP,GAAO,QACP,GAAO,mBACP,GAAO,0BACP,GAAO,WACP,GAAO,UACP,GAAO,QACP,GAAO,6BACP,GAAO,eACP,GAAO,aACP,GAAO,gBACP,GAAO,UACP,GAAO,OACP,GAAO,SACP,GAAO,iBACP,GAAO,UACP,GAAO,WACP,GAAO,WACP,GAAO,qBACP,GAAO,UACP,GAAO,QACP,GAAO,cACP,GAAO,oBACP,GAAO,UACP,GAAO,UACP,GAAO,WACP,GAAO,8BACP,GAAO,gBACP,GAAO,OACP,GAAO,UACP,GAAO,SACP,GAAO,gBACP,GAAO,mBACP,GAAO,8BACP,GAAO,QACP,GAAO,SACP,GAAO,UACP,GAAO,UACP,GAAO,QACP,GAAO,YACP,GAAO,SACP,GAAO,YACP,GAAO,UACP,GAAO,aACP,GAAO,OACP,GAAO,YACP,GAAO,WACP,GAAO,SACP,GAAO,gBACP,GAAO,SACP,GAAO,QACP,GAAO,kCACP,GAAO,gCACP,GAAO,WACP,GAAO,YACP,GAAO,UACP,GAAO,UACP,GAAO,QACP,GAAO,YACP,GAAO,OACP,GAAO,OACP,GAAO,UACP,GAAO,cACP,GAAO,SACP,GAAO,QACP,GAAO,UACP,GAAO,QACP,GAAO,SACP,GAAO,SACP,GAAO,aACP,GAAO,QACP,GAAO,WACP,GAAO,QACP,GAAO,SACP,GAAO,aACP,GAAO,mCACP,GAAO,SACP,GAAO,UACP,GAAO,UACP,GAAO,UACP,GAAO,yBACP,GAAO,gBACP,GAAO,YACP,GAAO,aACP,GAAO,QACP,GAAO,YACP,GAAO,aACP,GAAO,SACP,GAAO,WACP,GAAO,WACP,GAAO,OACP,GAAO,QACP,GAAO,mBACP,GAAO,aACP,GAAO,aACP,GAAO,YACP,GAAO,UACP,GAAO,SACP,GAAO,kCACP,GAAO,UACP,GAAO,SACP,GAAO,WACP,GAAO,aACP,GAAO,aACP,GAAO,UACP,GAAO,aACP,GAAO,UACP,GAAO,UACP,GAAO,QACP,GAAO,QACP,GAAO,cACP,GAAO,uBACP,GAAO,gBACP,GAAO,cACP,GAAO,YACP,GAAO,QACP,GAAO,UACP,GAAO,OACP,GAAO,iBACP,GAAO,2BACP,GAAO,SACP,GAAO,OACP,GAAO,WACP,GAAO,QACP,GAAO,kCACP,GAAO,SACP,GAAO,mBACP,GAAO,WACP,GAAO,OACP,GAAO,cACP,GAAO,WACP,GAAO,SACP,GAAO,WACP,GAAO,cACP,GAAO,QACP,GAAO,UACP,GAAO,UACP,GAAO,SACP,GAAO,SACP,GAAO,mBACP,GAAO,eACP,GAAO,wBACP,GAAO,cACP,GAAO,eACP,GAAO,4BACP,GAAO,+BACP,GAAO,QACP,GAAO,aACP,GAAO,wBACP,GAAO,eACP,GAAO,UACP,GAAO,SACP,GAAO,aACP,GAAO,eACP,GAAO,YACP,GAAO,WACP,GAAO,WACP,GAAO,kBACP,GAAO,UACP,GAAO,eACP,GAAO,kCACP,GAAO,QACP,GAAO,YACP,GAAO,QACP,GAAO,WACP,GAAO,yBACP,GAAO,YACP,GAAO,SACP,GAAO,cACP,GAAO,uBACP,GAAO,SACP,GAAO,aACP,GAAO,WACP,GAAO,WACP,GAAO,cACP,GAAO,OACP,GAAO,UACP,GAAO,QACP,GAAO,sBACP,GAAO,UACP,GAAO,SACP,GAAO,eACP,GAAO,2BACP,GAAO,SACP,GAAO,SACP,GAAO,UACP,GAAO,uBACP,GAAO,iBACP,GAAO,gBACP,GAAO,iCACP,GAAO,UACP,GAAO,aACP,GAAO,UACP,GAAO,YACP,GAAO,WACP,GAAO,0BACP,GAAO,uBACP,GAAO,oBACP,GAAO,iBACP,GAAO,QACP,GAAO,SACP,GAAO,YAWHC,EAAa,SAACC,GAClB,OAAoB,KAAVA,EAAE,QAAa,IAAIC,QAAQ,IAGjCC,EAAa,SAACF,GAClB,OAAQA,EAAE,QAAQC,QAAQ,IAG5B,OACE,yBAAKV,UAAU,WAEb,wBAAIA,UAAU,gBAAgBM,EAAQM,KAAtC,MAnBoBP,EAmB0CC,EAAQO,IAAIC,QAlBxEP,EAAaQ,eAAeV,GACvBE,EAAaF,GAEbA,IAgBP,uBAAGL,UAAU,gBAAb,gBAA0CQ,EAAWF,EAAQU,KAAKC,MAAlE,WAAkFN,EAAWL,EAAQU,KAAKC,MAA1G,SACA,uBAAGjB,UAAU,gBAAb,eAAyCQ,EAAWF,EAAQU,KAAKE,YAAjE,WAAuFP,EAAWL,EAAQU,KAAKE,YAA/G,SACA,uBAAGlB,UAAU,gBAAgBM,EAAQA,QAAQ,GAAGa,e,OCxPvCC,MAvBf,YAAoC,IAAZd,EAAW,EAAXA,QAOhBe,EAAS,CACbC,IAAKhB,EAAQiB,MAAMD,IACnBE,IAAKlB,EAAQiB,MAAME,KAGrB,OACE,kBAAC,IAAD,CAAYC,iBAAkBC,2CAC5B,kBAAC,IAAD,CACEC,kBAbY,CAChBC,OAAQ,OACRC,MAAO,OAYHC,KAAM,EACNV,OAAQA,MCiCDW,MA/Cf,WAAgB,IAAD,EAEeC,qBAFf,mBAEN3C,EAFM,KAEEC,EAFF,OAGiB0C,qBAHjB,mBAGN3B,EAHM,KAGG4B,EAHH,KA2Bb,OACE,yBAAKlC,UAAS,cATVM,GAAWA,EAAQU,KAAKC,KAAO,IAC1B,OACEX,GAAWA,EAAQU,KAAKC,KAAO,IACjC,YADF,IASL,uCAEA,kBAAC,EAAD,CACE3B,OAAQA,EACRC,UAAWA,EACXC,WA5Ba,SAAC2C,GAClBC,MAAM,qDAAD,OAAsDD,EAAtD,kBAHQR,qCAIVU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAM,OAAIN,EAAWM,MAC1BC,OAAM,SAAAC,GACL3C,MAAM,kCACN4C,OAAOC,SAASC,eAyBjBvC,GAAW,kBAAC,EAAD,CAAcA,QAASA,IAElCA,GAAW,kBAAC,EAAD,CAASA,QAASA,MClChBwC,QACW,cAA7BH,OAAOC,SAASG,UAEe,UAA7BJ,OAAOC,SAASG,UAEhBJ,OAAOC,SAASG,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnB,MAAK,SAAAoB,GACJA,EAAaC,gBAEdjB,OAAM,SAAAkB,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.48b53e07.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Search({ search, setSearch, getWeather }) {\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    \n    if (e.target.firstElementChild.value === '') {\n      alert('Please enter a city.')\n    } else {\n      setSearch(e.target.firstElementChild.value);\n      getWeather(e.target.firstElementChild.value);\n      e.target.firstElementChild.value = '';\n    };\n  };\n\n  return (\n    <div>\n\n      <form onSubmit={submitHandler} className=\"form\">\n\n        <input \n          className=\"search\" \n          type=\"text\" \n          id=\"search\" \n          placeholder=\"enter city\"\n          />\n\n        <input \n          className=\"submit\" \n          type=\"submit\" \n          value=\"Search\" \n          id=\"submit\"\n          />\n\n      </form>\n\n    </div>\n  );\n\n};\n\nexport default Search;\n","import React from 'react';\n\nfunction Weather({ weather }) {\n\n  const isoCountries = {\n    'AF' : 'Afghanistan',\n    'AX' : 'Aland Islands',\n    'AL' : 'Albania',\n    'DZ' : 'Algeria',\n    'AS' : 'American Samoa',\n    'AD' : 'Andorra',\n    'AO' : 'Angola',\n    'AI' : 'Anguilla',\n    'AQ' : 'Antarctica',\n    'AG' : 'Antigua And Barbuda',\n    'AR' : 'Argentina',\n    'AM' : 'Armenia',\n    'AW' : 'Aruba',\n    'AU' : 'Australia',\n    'AT' : 'Austria',\n    'AZ' : 'Azerbaijan',\n    'BS' : 'Bahamas',\n    'BH' : 'Bahrain',\n    'BD' : 'Bangladesh',\n    'BB' : 'Barbados',\n    'BY' : 'Belarus',\n    'BE' : 'Belgium',\n    'BZ' : 'Belize',\n    'BJ' : 'Benin',\n    'BM' : 'Bermuda',\n    'BT' : 'Bhutan',\n    'BO' : 'Bolivia',\n    'BA' : 'Bosnia And Herzegovina',\n    'BW' : 'Botswana',\n    'BV' : 'Bouvet Island',\n    'BR' : 'Brazil',\n    'IO' : 'British Indian Ocean Territory',\n    'BN' : 'Brunei Darussalam',\n    'BG' : 'Bulgaria',\n    'BF' : 'Burkina Faso',\n    'BI' : 'Burundi',\n    'KH' : 'Cambodia',\n    'CM' : 'Cameroon',\n    'CA' : 'Canada',\n    'CV' : 'Cape Verde',\n    'KY' : 'Cayman Islands',\n    'CF' : 'Central African Republic',\n    'TD' : 'Chad',\n    'CL' : 'Chile',\n    'CN' : 'China',\n    'CX' : 'Christmas Island',\n    'CC' : 'Cocos (Keeling) Islands',\n    'CO' : 'Colombia',\n    'KM' : 'Comoros',\n    'CG' : 'Congo',\n    'CD' : 'Congo, Democratic Republic',\n    'CK' : 'Cook Islands',\n    'CR' : 'Costa Rica',\n    'CI' : 'Cote D\\'Ivoire',\n    'HR' : 'Croatia',\n    'CU' : 'Cuba',\n    'CY' : 'Cyprus',\n    'CZ' : 'Czech Republic',\n    'DK' : 'Denmark',\n    'DJ' : 'Djibouti',\n    'DM' : 'Dominica',\n    'DO' : 'Dominican Republic',\n    'EC' : 'Ecuador',\n    'EG' : 'Egypt',\n    'SV' : 'El Salvador',\n    'GQ' : 'Equatorial Guinea',\n    'ER' : 'Eritrea',\n    'EE' : 'Estonia',\n    'ET' : 'Ethiopia',\n    'FK' : 'Falkland Islands (Malvinas)',\n    'FO' : 'Faroe Islands',\n    'FJ' : 'Fiji',\n    'FI' : 'Finland',\n    'FR' : 'France',\n    'GF' : 'French Guiana',\n    'PF' : 'French Polynesia',\n    'TF' : 'French Southern Territories',\n    'GA' : 'Gabon',\n    'GM' : 'Gambia',\n    'GE' : 'Georgia',\n    'DE' : 'Germany',\n    'GH' : 'Ghana',\n    'GI' : 'Gibraltar',\n    'GR' : 'Greece',\n    'GL' : 'Greenland',\n    'GD' : 'Grenada',\n    'GP' : 'Guadeloupe',\n    'GU' : 'Guam',\n    'GT' : 'Guatemala',\n    'GG' : 'Guernsey',\n    'GN' : 'Guinea',\n    'GW' : 'Guinea-Bissau',\n    'GY' : 'Guyana',\n    'HT' : 'Haiti',\n    'HM' : 'Heard Island & Mcdonald Islands',\n    'VA' : 'Holy See (Vatican City State)',\n    'HN' : 'Honduras',\n    'HK' : 'Hong Kong',\n    'HU' : 'Hungary',\n    'IS' : 'Iceland',\n    'IN' : 'India',\n    'ID' : 'Indonesia',\n    'IR' : 'Iran',\n    'IQ' : 'Iraq',\n    'IE' : 'Ireland',\n    'IM' : 'Isle Of Man',\n    'IL' : 'Israel',\n    'IT' : 'Italy',\n    'JM' : 'Jamaica',\n    'JP' : 'Japan',\n    'JE' : 'Jersey',\n    'JO' : 'Jordan',\n    'KZ' : 'Kazakhstan',\n    'KE' : 'Kenya',\n    'KI' : 'Kiribati',\n    'KR' : 'Korea',\n    'KW' : 'Kuwait',\n    'KG' : 'Kyrgyzstan',\n    'LA' : 'Lao People\\'s Democratic Republic',\n    'LV' : 'Latvia',\n    'LB' : 'Lebanon',\n    'LS' : 'Lesotho',\n    'LR' : 'Liberia',\n    'LY' : 'Libyan Arab Jamahiriya',\n    'LI' : 'Liechtenstein',\n    'LT' : 'Lithuania',\n    'LU' : 'Luxembourg',\n    'MO' : 'Macao',\n    'MK' : 'Macedonia',\n    'MG' : 'Madagascar',\n    'MW' : 'Malawi',\n    'MY' : 'Malaysia',\n    'MV' : 'Maldives',\n    'ML' : 'Mali',\n    'MT' : 'Malta',\n    'MH' : 'Marshall Islands',\n    'MQ' : 'Martinique',\n    'MR' : 'Mauritania',\n    'MU' : 'Mauritius',\n    'YT' : 'Mayotte',\n    'MX' : 'Mexico',\n    'FM' : 'Micronesia, Federated States Of',\n    'MD' : 'Moldova',\n    'MC' : 'Monaco',\n    'MN' : 'Mongolia',\n    'ME' : 'Montenegro',\n    'MS' : 'Montserrat',\n    'MA' : 'Morocco',\n    'MZ' : 'Mozambique',\n    'MM' : 'Myanmar',\n    'NA' : 'Namibia',\n    'NR' : 'Nauru',\n    'NP' : 'Nepal',\n    'NL' : 'Netherlands',\n    'AN' : 'Netherlands Antilles',\n    'NC' : 'New Caledonia',\n    'NZ' : 'New Zealand',\n    'NI' : 'Nicaragua',\n    'NE' : 'Niger',\n    'NG' : 'Nigeria',\n    'NU' : 'Niue',\n    'NF' : 'Norfolk Island',\n    'MP' : 'Northern Mariana Islands',\n    'NO' : 'Norway',\n    'OM' : 'Oman',\n    'PK' : 'Pakistan',\n    'PW' : 'Palau',\n    'PS' : 'Palestinian Territory, Occupied',\n    'PA' : 'Panama',\n    'PG' : 'Papua New Guinea',\n    'PY' : 'Paraguay',\n    'PE' : 'Peru',\n    'PH' : 'Philippines',\n    'PN' : 'Pitcairn',\n    'PL' : 'Poland',\n    'PT' : 'Portugal',\n    'PR' : 'Puerto Rico',\n    'QA' : 'Qatar',\n    'RE' : 'Reunion',\n    'RO' : 'Romania',\n    'RU' : 'Russia',\n    'RW' : 'Rwanda',\n    'BL' : 'Saint Barthelemy',\n    'SH' : 'Saint Helena',\n    'KN' : 'Saint Kitts And Nevis',\n    'LC' : 'Saint Lucia',\n    'MF' : 'Saint Martin',\n    'PM' : 'Saint Pierre And Miquelon',\n    'VC' : 'Saint Vincent And Grenadines',\n    'WS' : 'Samoa',\n    'SM' : 'San Marino',\n    'ST' : 'Sao Tome And Principe',\n    'SA' : 'Saudi Arabia',\n    'SN' : 'Senegal',\n    'RS' : 'Serbia',\n    'SC' : 'Seychelles',\n    'SL' : 'Sierra Leone',\n    'SG' : 'Singapore',\n    'SK' : 'Slovakia',\n    'SI' : 'Slovenia',\n    'SB' : 'Solomon Islands',\n    'SO' : 'Somalia',\n    'ZA' : 'South Africa',\n    'GS' : 'South Georgia And Sandwich Isl.',\n    'ES' : 'Spain',\n    'LK' : 'Sri Lanka',\n    'SD' : 'Sudan',\n    'SR' : 'Suriname',\n    'SJ' : 'Svalbard And Jan Mayen',\n    'SZ' : 'Swaziland',\n    'SE' : 'Sweden',\n    'CH' : 'Switzerland',\n    'SY' : 'Syrian Arab Republic',\n    'TW' : 'Taiwan',\n    'TJ' : 'Tajikistan',\n    'TZ' : 'Tanzania',\n    'TH' : 'Thailand',\n    'TL' : 'Timor-Leste',\n    'TG' : 'Togo',\n    'TK' : 'Tokelau',\n    'TO' : 'Tonga',\n    'TT' : 'Trinidad And Tobago',\n    'TN' : 'Tunisia',\n    'TR' : 'Turkey',\n    'TM' : 'Turkmenistan',\n    'TC' : 'Turks And Caicos Islands',\n    'TV' : 'Tuvalu',\n    'UG' : 'Uganda',\n    'UA' : 'Ukraine',\n    'AE' : 'United Arab Emirates',\n    'GB' : 'United Kingdom',\n    'US' : 'United States',\n    'UM' : 'United States Outlying Islands',\n    'UY' : 'Uruguay',\n    'UZ' : 'Uzbekistan',\n    'VU' : 'Vanuatu',\n    'VE' : 'Venezuela',\n    'VN' : 'Viet Nam',\n    'VG' : 'Virgin Islands, British',\n    'VI' : 'Virgin Islands, U.S.',\n    'WF' : 'Wallis And Futuna',\n    'EH' : 'Western Sahara',\n    'YE' : 'Yemen',\n    'ZM' : 'Zambia',\n    'ZW' : 'Zimbabwe'\n  };\n  \n  const getCountryName = (countryCode) => {\n    if (isoCountries.hasOwnProperty(countryCode)) {\n      return isoCountries[countryCode];\n    } else {\n      return countryCode;\n    };\n  };\n\n  const convertToF = (k) => {\n    return (((k-273.15)*1.8)+32).toFixed(0);\n  };\n\n  const convertToC = (k) => {\n    return (k-273.15).toFixed(0);\n  };\n\n  return (\n    <div className=\"weather\">\n\n      <h2 className=\"weather-city\">{weather.name}, {getCountryName((weather.sys.country))}</h2>\n      <p className=\"weather-info\">Temperature: {convertToF(weather.main.temp)}&deg;F / {convertToC(weather.main.temp)}&deg;C</p>\n      <p className=\"weather-info\">Feels Like: {convertToF(weather.main.feels_like)}&deg;F / {convertToC(weather.main.feels_like)}&deg;C</p>\n      <p className=\"weather-info\">{weather.weather[0].description}</p>\n      \n    </div>\n  );\n\n};\n\nexport default Weather;","import React from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\n\nfunction MapContainer({ weather }) {\n\n  const mapStyles = {        \n    height: \"40vh\",\n    width: \"40%\"\n  };\n  \n  const center = {\n    lat: weather.coord.lat,\n    lng: weather.coord.lon\n  };\n\n  return (\n    <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLEMAPS_API_KEY}>\n      <GoogleMap\n        mapContainerStyle={mapStyles}\n        zoom={5}\n        center={center} \n        />\n    </LoadScript>\n  );\n};\n\nexport default MapContainer;","import React, { useState } from 'react';\nimport './App.css';\nimport Search from './components/Search';\nimport Weather from './components/Weather';\nimport MapContainer from './components/MapContainer';\n\nfunction App() {\n\n  const [search, setSearch] = useState();\n  const [weather, setWeather] = useState();\n\n  const apiKey = process.env.REACT_APP_OPENWEATHER_API_KEY;\n\n  const getWeather = (city) => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`)\n      .then(res => res.json())\n      .then(result => setWeather(result))\n      .catch(err => {\n        alert('Please enter a valid city name');\n        window.location.reload();\n      });\n  };\n\n  const colorChange = () => {\n\n    if (weather && weather.main.temp < 283) {\n      return 'cold';\n    } else if (weather && weather.main.temp > 283) {\n      return 'warm';\n    };\n\n  };\n\n  return (\n    <div className={`app ${colorChange()}`}>\n\n      <h1>Weather</h1>\n\n      <Search \n        search={search}\n        setSearch={setSearch} \n        getWeather={getWeather}\n         />\n\n      {weather && <MapContainer weather={weather} />}\n\n      {weather && <Weather weather={weather} />}\n      \n    </div>\n  );\n\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}